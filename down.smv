MODULE main
VAR
a[1] : {0, 1, 2, 3, 4, 5};
a[2] : {0, 1, 2, 3, 4, 5};
a[3] : {0, 1, 2, 3, 4, 5};
a[4] : {0, 1, 2, 3, 4, 5};
a[5] : {0, 1, 2, 3, 4, 5};
a[6] : {0, 1, 2, 3, 4, 5};

--------------------

rule1__1 : process Proc__rule1__1(a[1], a[2]);

rule1__2 : process Proc__rule1__2(a[2], a[3]);

rule1__3 : process Proc__rule1__3(a[3], a[4]);

rule1__4 : process Proc__rule1__4(a[4], a[5]);

rule1__5 : process Proc__rule1__5(a[5]);

rule1__6 : process Proc__rule1__6(a[6]);

--------------------

ASSIGN
init(a[1]) := case
TRUE : 5;
esac;
init(a[2]) := case
TRUE : 5;
esac;
init(a[3]) := case
TRUE : 5;
esac;
init(a[4]) := case
TRUE : 5;
esac;
init(a[5]) := case
TRUE : 5;
esac;
init(a[6]) := case
TRUE : 5;
esac;

--------------------

SPEC
  AG ((((((((0 + a[1]) + a[2]) + a[3]) + a[4]) + a[5]) + a[6]) > 0))

--------------------

MODULE Proc__rule1__1(a__1, a__2)
ASSIGN
next(a__1) := case
(a__1 > 0) : case
(a__1 >= 1) : (a__1 - 1); TRUE : a__1;
esac;
TRUE : a__1;
esac;

next(a__2) := case
(a__1 > 0) : case
(((1 + 1) = 2) & (a__2 > 0)) : (a__2 - 1); TRUE : a__2;
esac;
TRUE : a__2;
esac;

---------

MODULE Proc__rule1__2(a__2, a__3)
ASSIGN
next(a__2) := case
(a__2 > 0) : case
(a__2 >= 1) : (a__2 - 1); TRUE : a__2;
esac;
TRUE : a__2;
esac;

next(a__3) := case
(a__2 > 0) : case
(((2 + 1) = 3) & (a__3 > 0)) : (a__3 - 1); TRUE : a__3;
esac;
TRUE : a__3;
esac;

---------

MODULE Proc__rule1__3(a__3, a__4)
ASSIGN
next(a__3) := case
(a__3 > 0) : case
(a__3 >= 1) : (a__3 - 1); TRUE : a__3;
esac;
TRUE : a__3;
esac;

next(a__4) := case
(a__3 > 0) : case
(((3 + 1) = 4) & (a__4 > 0)) : (a__4 - 1); TRUE : a__4;
esac;
TRUE : a__4;
esac;

---------

MODULE Proc__rule1__4(a__4, a__5)
ASSIGN
next(a__4) := case
(a__4 > 0) : case
(a__4 >= 1) : (a__4 - 1); TRUE : a__4;
esac;
TRUE : a__4;
esac;

next(a__5) := case
(a__4 > 0) : case
(((4 + 1) = 5) & (a__5 > 0)) : (a__5 - 1); TRUE : a__5;
esac;
TRUE : a__5;
esac;

---------

MODULE Proc__rule1__5(a__5)
ASSIGN

next(a__5) := case
(a__5 > 0) : case
(a__5 >= 1) : (a__5 - 1); TRUE : a__5;
esac;
TRUE : a__5;
esac;

---------

MODULE Proc__rule1__6(a__6)
ASSIGN

next(a__6) := case
(a__6 > 0) : case
(a__6 >= 1) : (a__6 - 1); TRUE : a__6;
esac;
TRUE : a__6;
esac;